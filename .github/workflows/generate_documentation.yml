# Copyright (c) 2024 AVI-SPL Inc.
# All Rights Reserved.
#
# Generates documentation from OpenAPI and copies generated PDF file
name: generate_documentation

on:
  workflow_call:
    inputs:
      pom-xml-file:
        description: 'The path of the project pom.xml'
        required: false
        default: 'pom.xml'
        type: string
      maven_goals:
        description: 'The goals for the mvn command (optional)'
        required: false
        type: string
        default: 'clean install'
      runs-on_label_1:
        description: 'The job runner first label (optional)'
        required: false
        type: string
        default: 'self-hosted'
      runs-on_label_2:
        description: 'The job runner second label (optional)'
        required: false
        type: string
        default: 'linux'
      symphony-devops-workflows_ref:
        description: 'symphony-devops-workflows reference branch (or tag) to be used. E.g. ''develop'''
        required: false
        type: string
        default: 'develop'
      source-pdf-filename:
        description: 'source generated pdf file name under target/generated-docs/'
        required: true
        type: string
      destination-pdf-filename:
        description: 'destination REST API doc pdf file name in root'
        required: true
        type: string

jobs:
  generate_documentation:
    permissions:
      contents: write
      actions: read

    runs-on: [ "${{ inputs.runs-on_label_1 }}", "${{ inputs.runs-on_label_2 }}" ]
    steps:
      - name: Git checkout current repository/branch
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: '0'
          clean: 'true'

      - name: Checkout actions from private repository
        uses: actions/checkout@v4.1.1
        with:
          repository: AVISPL/symphony-devops-workflows
          ref: '${{ inputs.symphony-devops-workflows_ref }}'
          path: ./.github/symphony-devops-workflows

      - name: Setup JDK
        uses: ./.github/symphony-devops-workflows/actions/setup_jdk
        with:
          distribution: 'custom'

      - name: Get project version
        id: get_project_version
        uses: ./.github/symphony-devops-workflows/actions/maven_get_project_version
        with:
          pom-xml-file: ${{ inputs.pom-xml-file }}

      - name: Maven build
        uses: ./.github/symphony-devops-workflows/actions/maven_build_and_tag
        with:
          pom-xml-file: ${{ inputs.pom-xml-file }}
          maven_goals: ${{ inputs.maven_goals }}
          maven_other_options: '-DskipTests=false -DskipITs=false'
          git_tag: ''

      - name: Move generated PDF to root directory
        run: mv target/generated-docs/${{ inputs.source-pdf-filename }} ./${{ inputs.destination-pdf-filename }}

      - name: Extract commit author information
        id: get_author_info
        run: |
          COMMIT_AUTHOR_NAME=$(git log -1 --pretty=format:'%an')
          COMMIT_AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae')
          echo "author_name=${COMMIT_AUTHOR_NAME}" >> $GITHUB_OUTPUT
          echo "author_email=${COMMIT_AUTHOR_EMAIL}" >> $GITHUB_OUTPUT

      - name: Git commit push
        uses: AVISPL/symphony-devops-workflows/actions/git_add_commit_push@develop
        with:
          repository-dir: '.'
          file-pattern: ${{ inputs.destination-pdf-filename }}
          commit-message: '[AUTO] PDF Documentation'
          commit-user-name: ${{ steps.get_author_info.outputs.author_name }}
          commit-user-email: ${{ steps.get_author_info.outputs.author_email }}
